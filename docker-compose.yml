services:
  redis:
    image: redis:alpine
    container_name: redis_integration
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - default
  django:
    container_name: django_integration
    build:
      context: .
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    volumes:
      - .:/usr/src/app/
    ports:
      - 8001:8000
    entrypoint: ["sh","/usr/src/app/entrypoint.sh"]
    depends_on:
      - redis
      - postgresql
    networks:
      - default

  celery:
    container_name: celery_integration
    build:
      context: .
    volumes:
      - .:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=django-insecure-x2uz958vuqzfn_+sr4zvzys601j8z=fs6%u#fs%m=9t(toyn4t
      - ALLOWED_HOSTS=localhost
    command: celery -A testtask worker --loglevel=info
    entrypoint: ["sh","/usr/src/app/entrypoint.sh"]
    depends_on:
      - redis
      - postgresql
    networks:
      - default


  postgresql:
    container_name: postgres_integration

    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: brat
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgres/data
    networks:
      - default

volumes:
  redis_data:
  postgres_data:



networks:
  default:
    driver: bridge
